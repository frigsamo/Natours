/* Este es el selector universar para hacer un reset del browser se agregan::after y ::befor para los seudo elements sean reiniciados tambien */
*, *::before, *::after {
  margin: 0;
  padding: 0;
  /* box sizing no tiene herencia de esta manera poniendo inherit podemos forzarlos a que herede  */
  box-sizing: inherit; }

html {
  /* Se declara este font size para usra rem en los pixeles porque 1rem = font-size of the root element se declara en 10 para hacer mas 
    facil los calculos de esta manera cuando se vaya a hacer el response solo tendriamos que cambiar el tamanno de la letra en los mediaqueries */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* 60% {
        transform: rotate(180deg);
    } */
  80% {
    opacity: 0.8;
    transform: translateX(1.5rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); }
  80% {
    opacity: 0.8;
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(4rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  font-family: 'Lato',sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Cuando la animacion termina se mueve un poquito hacia arriva de esta manera se soluciona chequear luego; */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-out;
    /* Otras propiedas para las animaciones que puedo utilizar;
        animation-delay: 3s;
        animation-iteration-count: 3;
         animation-timing-function: ease-in; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.38rem;
    /* Esta es la forma conrta para poner las animaciones sin tener que hacerlo como en heading-primary-main */
    animation: moveInRight 3s ease-out; }

.heading-secondary {
  font-size: 2.5rem;
  text-transform: uppercase;
  display: inline-block;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: .1rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(4deg) scale(1.1);
    text-shadow: 1rem 2rem 2rem rgba(0, 0, 0, 0.4); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.parograph {
  font-size: 1.6rem; }
  .parograph:not(:last-child) {
    margin-bottom: 2rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-botom-small {
  margin-bottom: 1rem; }

.btn {
  /* El botton tiene la sudo class link por defect so este es el estilo innicial y el estilo para cuando el botton este visitado */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    display: inline-block;
    border-radius: 10rem;
    padding: 1.5rem 4rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /* hay que poner content aunque se vacio para que el elemento se pueda var display es obligatoria  */
    content: '';
    display: inline-block;
    /* El seudo elemento es basicamente un hijo del elemento pero en la parte de atras con height and width 100% estamosdiciendo que tome el tamanno de elemento padra;; */
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 10rem;
    z-index: -1;
    transition: all 0.5s; }
  .btn--animated {
    animation: name duration timing-function delay iteration-count direction fill-mode;
    animation: moveInBottom 1 ease-out 2s;
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  font-size: 1.6rem;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.25);
  transform: translateY(-3px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.25);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    box-shadow: 1rem 1.5rem 4rem rgba(0, 0, 0, 0.6);
    border-radius: 2px;
    width: 55%;
    position: absolute;
    outline-offset: 2rem;
    transition: all .2s; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 1rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 8rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      z-index: 4;
      transform: scale(1.07) translateY(-0.5rem);
      box-shadow: 1rem 1.8rem 4rem rgba(0, 0, 0, 0.8); }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.7); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    display: inline-block;
    background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8));
    -webkit-background-clip: text;
    color: transparent;
    font-size: 6rem; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.05); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 40rem; }
  .card__side {
    overflow: hidden;
    height: 50rem;
    transition: all 2s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: .4rem;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
    .card__side--front-1 {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(-180deg); }
      .card__side--back-1 {
        background-color: #fff;
        background-image: linear-gradient(to right bottom, #ff7730, #ffb900); }
  .card:hover .card__side--front {
    transform: rotateY(180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    background-blend-mode: screen; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ff7730, #ffb900), url("../img/nat-5.jpg");
      height: 23rem; }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    position: absolute;
    text-align: right;
    right: 2rem;
    top: 13rem;
    width: 75%; }
  .card__heading-span {
    padding: .7rem 1.5rem;
    -webkit-box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
  .card__details ul {
    padding: 1rem;
    list-style: none;
    width: 75%;
    margin: 0 auto; }
    .card__details ul li {
      text-align: center;
      padding: 1rem;
      font-size: 1.5rem; }
      .card__details ul li:not(:last-child) {
        border-bottom: 2px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price--box {
    color: #fff;
    margin-bottom: 8rem; }
  .card__price--only {
    font-size: 1.5rem;
    text-transform: uppercase; }
  .card__price--value {
    font-size: 6rem;
    font-weight: 300; }

.header {
  height: 95vh;
  /* De esta manera puedo super poner un backgroun sobre otro y con un gradiente */
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.705), rgba(40, 180, 133, 0.705)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* Para hacer que la imagen se vea como un poligono  */
  --webkit-clip-path: polygon(0 0 , 100% 0, 100% 75%, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    /* Esta posicion es absoluta al componente padre es decir el header y movemos 50% a la izquierda y 50% hacia abajo */
    position: absolute;
    top: 50%;
    left: 50%;
    /* Con esta propiedad se mueve el elemento respecto a su posicion actual */
    transform: translate(-50%, -70%);
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem;
  margin-top: -22.5rem; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg); }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 20rem; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: '';
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
